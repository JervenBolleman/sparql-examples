@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix schema: <https://schema.org/> .

<https://www.wikidata.org/#query-89537bcf302243f0e63fe28fcaa0f4b9> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  sh:select """PREFIX entity: <http://www.wikidata.org/entity/>

#  In addition to the original query this one comes with some advantages:
#  - You will get only literals as results, (even if the values are stored as IRI in wikibase)
#  - That means you will also get properties as birth date, alphanumeric identifier and so on.
#  - The list is ordered numerically by property number. (So P19 comes before P100) 
#  - All label, altLabel and description in a given Language are included.
#  You may open a separate column ?valUrl if you need also the IRI
#
#  Please advise, if there is an option to put the Q-Number  and/or the Language 
#  code into a runtime variable. 

SELECT ?propNumber ?propLabel ?val
WHERE
{
	hint:Query hint:optimizer 'None' .
	{	BIND(entity:Q42 AS ?valUrl) .
		BIND(\"N/A\" AS ?propUrl ) .
		BIND(\"Name\"@de AS ?propLabel ) .
       entity:Q42 rdfs:label ?val .
      
        FILTER (LANG(?val) = \"de\") 
	}
    UNION
    {   BIND(entity:Q42 AS ?valUrl) .
      
        BIND(\"AltLabel\"@de AS ?propLabel ) .
        optional{entity:Q42 skos:altLabel ?val}.
        FILTER (LANG(?val) = \"de\") 
    }
    UNION
    {   BIND(entity:Q42 AS ?valUrl) .
      
        BIND(\"Beschreibung\"@de AS ?propLabel ) .
        optional{entity:Q42 schema:description ?val}.
        FILTER (LANG(?val) = \"de\") 
    }
   	UNION
	{	entity:Q42 ?propUrl ?valUrl .
		?property ?ref ?propUrl .
		?property rdf:type wikibase:Property .
		?property rdfs:label ?propLabel.
     	FILTER (lang(?propLabel) = 'de' )
        filter  isliteral(?valUrl) 
        BIND(?valUrl AS ?val)
	}
	UNION
	{	entity:Q42 ?propUrl ?valUrl .
		?property ?ref ?propUrl .
		?property rdf:type wikibase:Property .
		?property rdfs:label ?propLabel.
     	FILTER (lang(?propLabel) = 'de' ) 
        filter  isIRI(?valUrl) 
        ?valUrl rdfs:label ?valLabel 
		FILTER (LANG(?valLabel) = \"de\") 
         BIND(CONCAT(?valLabel) AS ?val)
	}
        BIND( SUBSTR(str(?propUrl),38, 250) AS ?propNumber)
}
ORDER BY xsd:integer(?propNumber)""";
  dcterms:isPartOf <https://www.wikidata.org//wiki/Wikidata:SPARQL_query_service/queries/examples/advanced/nl>,
    <https://www.wikidata.org//wiki/Wikidata:SPARQL_query_service/queries/examples/advanced/ja>,
    <https://www.wikidata.org//wiki/Wikidata:SPARQL_query_service/queries/examples/advanced/zh>,
    <https://www.wikidata.org//wiki/Wikidata:SPARQL_query_service/queries/examples/advanced/hy>,
    <https://www.wikidata.org//wiki/Wikidata:SPARQL_query_service/queries/examples/advanced/fr>,
    <https://www.wikidata.org//wiki/Wikidata:SPARQL_query_service/queries/examples/advanced/tr>,
    <https://www.wikidata.org//wiki/Wikidata:SPARQL_query_service/queries/examples/advanced/es>,
    <https://www.wikidata.org//wiki/Wikidata:SPARQL_query_service/queries/examples/advanced/uk>,
    <https://www.wikidata.org//wiki/Wikidata:SPARQL_query_service/queries/examples/advanced/sv>,
    <https://www.wikidata.org//wiki/Wikidata:SPARQL_query_service/queries/examples/advanced/en>,
    <https://www.wikidata.org//wiki/Wikidata:SPARQL_query_service/queries/examples/advanced>,
    <https://www.wikidata.org//wiki/User:Duesentrieb/WDQL>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  sh:prefixes _:wikidata_prefixes, _:genid-9eb55b2583ef4ad09d9d48ff9f18ffec112319-wikidata_prefixes,
    _:genid-9eb55b2583ef4ad09d9d48ff9f18ffec112319-48F9F83328BD028034F75FC59133E15B, _:genid-9eb55b2583ef4ad09d9d48ff9f18ffec112319-8D2D125CD1B96A87C3A6F4F6AD78BC1E,
    _:genid-9eb55b2583ef4ad09d9d48ff9f18ffec112319-0CA2DE76EFCC44617ECC34CD0810E3E4, _:genid-9eb55b2583ef4ad09d9d48ff9f18ffec112319-DF9BA9207C7EB6A4D3CCABCCA7AE8E8C,
    _:genid-9eb55b2583ef4ad09d9d48ff9f18ffec112319-69E50D7B0FE4C26F645B6662520709D1, _:genid-9eb55b2583ef4ad09d9d48ff9f18ffec112319-2DA3CD7C089052556C07C8D3F459CB1B,
    _:genid-9eb55b2583ef4ad09d9d48ff9f18ffec112319-571B75AE7C3CBF2ED626AA8CB7FA643D, _:genid-9eb55b2583ef4ad09d9d48ff9f18ffec112319-DD00ADB6245FFC63A2E1632FAC102240,
    _:genid-9eb55b2583ef4ad09d9d48ff9f18ffec112319-EDDD7986FF396FF86BD76E3FAC62A700, _:genid-9eb55b2583ef4ad09d9d48ff9f18ffec112319-B86A321907AFB9C4E53BC962D0427519;
  schema:target <https://query.wikidata.org/sparql/> .
