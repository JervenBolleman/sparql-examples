@prefix ex: <https://sparql.uniprot.org/.well-known/sparql-examples/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix wiki: <https://www.wikidata.org/wiki/> .

ex:sparqlrdf/User:Daniel_Mietchen/snippet_7.ttl a sh:SPARQLExecutable,
        sh:SPARQLSelectExecutable ;
    rdfs:comment "Sparql query from file sparqlrdf/User:Daniel_Mietchen/snippet_7.ttl"^^rdf:HTML ;
    dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/> ;
    dcterms:isVersionOf <https://www.wikidata.org/wiki/User:Daniel_Mietchen> ;
    sh:select """
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX wds: <http://www.wikidata.org/entity/statement/>
PREFIX wdv: <http://www.wikidata.org/value/>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX p: <http://www.wikidata.org/prop/>
PREFIX ps: <http://www.wikidata.org/prop/statement/>
PREFIX pq: <http://www.wikidata.org/prop/qualifier/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX bd: <http://www.bigdata.com/rdf#>

PREFIX wdref: <http://www.wikidata.org/reference/>
PREFIX psv: <http://www.wikidata.org/prop/statement/value/>
PREFIX psn: <http://www.wikidata.org/prop/statement/value-normalized/>
PREFIX pqv: <http://www.wikidata.org/prop/qualifier/value/>
PREFIX pqn: <http://www.wikidata.org/prop/qualifier/value-normalized/>
PREFIX pr: <http://www.wikidata.org/prop/reference/>
PREFIX prv: <http://www.wikidata.org/prop/reference/value/>
PREFIX prn: <http://www.wikidata.org/prop/reference/value-normalized/>
PREFIX wdno: <http://www.wikidata.org/prop/novalue/>
PREFIX wdata: <http://www.wikidata.org/wiki/Special:EntityData/>

PREFIX schema: <http://schema.org/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX prov: <http://www.w3.org/ns/prov#>
PREFIX bds: <http://www.bigdata.com/rdf/search#>
PREFIX gas: <http://www.bigdata.com/rdf/gas#>
PREFIX hint: <http://www.bigdata.com/queryHints#>



# tool: scholia
PREFIX target: <http://www.wikidata.org/entity/Q21045365> # Initial Sequencing of the human genome

SELECT
(COUNT(?work) AS ?count) 
?string 
(CONCAT("https://author-disambiguator.toolforge.org/names_oauth.php?doit=Look+for+author&name=", 
        ENCODE_FOR_URI(?string)) AS ?author_resolver_url) 
WITH {
  SELECT DISTINCT ?authorstring WHERE {
    target: wdt:P50 ?authorQID .    
    { target: wdt:P2093 ?authorstring . }
    UNION
    {
      { ?authorQID skos:altLabel ?author_. }
      UNION
      { ?authorQID rdfs:label ?author_. }
      BIND(STR(?author_) AS ?authorstring)
    }
    UNION
    {
      ?author_statement ps:P50 ?authorQID ;
                        pq:P1932 ?authorstring.
    }
  }
  LIMIT 10000
} AS %rawstrings
WITH
# This part is due to Dipsacus fullonum, as per https://w.wiki/5Brk
{
  # Calculate capitalization variants of these raw strings
  SELECT DISTINCT ?string
  WHERE
  {
    {
      INCLUDE %rawstrings
      BIND(STR(?authorstring) AS ?string) # the raw strings
    }
    UNION
    {
      INCLUDE %rawstrings
      BIND(UCASE(STR(?authorstring)) AS ?string) # uppercased versions of the raw strings
    }
    UNION
    {
      INCLUDE %rawstrings
      BIND(LCASE(STR(?authorstring)) AS ?string) # lowercased versions of the raw strings
    }
  }
} AS %normalizedstrings
WHERE {
  # Find works that have "author name string" values equal to these normalized strings
  INCLUDE %normalizedstrings
  ?work wdt:P2093 ?string. 
}
GROUP BY ?string
ORDER BY DESC (?count)
LIMIT 200



""" ;
    schema:target <https://query.wikidata.org/sparql/> .
